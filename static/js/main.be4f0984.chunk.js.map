{"version":3,"sources":["components/Card/card.component.js","components/card-list/card-list.components.js","components/SearchBox/search-box.component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","phone","address","city","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAGaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,mCAAOL,EAAMI,QAAQE,KAArB,OACA,kCAAMN,EAAMI,QAAQG,MAApB,OACA,kCAAMP,EAAMI,QAAQI,MAApB,OACA,kCAAMR,EAAMI,QAAQK,QAAQC,KAA5B,WCLKC,G,MAAW,SAAAX,GAAK,OACzB,qBAAKC,UAAU,WAAf,SACQD,EAAMY,SAASC,KAAI,SAAAT,GAAO,OACzB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCJnBS,G,MACT,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACI,uBACIf,UAAU,SACVgB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCkCPG,G,wDArCb,aAAe,IAAD,8BACZ,gBAcFH,aAAe,SAAAI,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,SAAUkB,S,oBAO7C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA7B,GAAO,OAC9CA,EAAQE,KAAK4B,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAKjC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEc,YAAY,kBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GAhCVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.be4f0984.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2> { props.monster.name } </h2>\r\n        <p> { props.monster.email } </p>\r\n        <p> { props.monster.phone } </p>\r\n        <p> { props.monster.address.city } </p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../Card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => (\r\n    <div className='CardList'>\r\n           {props.monsters.map(monster => (\r\n             <Card key={monster.id} monster={monster} />\r\n           ))}\r\n   </div>\r\n   );","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox =\r\n    ({ placeholder, handleChange }) => (\r\n        <input\r\n            className='search'\r\n            type='search'\r\n            placeholder={placeholder}\r\n            onChange={handleChange}\r\n        />\r\n    )","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.components';\nimport { SearchBox } from './components/SearchBox/search-box.component'\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }));\n  }\n\n  handleChange = e => {\n    this.setState({ searchField: e.target.value });\n  };\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <SearchBox\n          placeholder='search monsters'\n          handleChange={this.handleChange}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}